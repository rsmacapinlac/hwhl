http:
#region routers
  routers:
    # external routes
    bienn8n:
      entryPoints:
        - "https"
      rule: "Host(`bienbot.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: bienn8n
    biendb:
      entryPoints:
        - "https"
      rule: "Host(`biendb.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: biendb
    n8n:
      entryPoints:
        - "https"
      rule: "Host(`automation.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: n8n
    baserow:
      entryPoints:
        - "https"
      rule: "Host(`db.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: baserow
    audiobookshelf-external:
      entryPoints:
        - "https"
      rule: "Host(`abs.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: audiobookshelf
    ubooquity-external:
      entryPoints:
        - "https"
      rule: "Host(`reading.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: ubooquity
    linkding:
      entryPoints:
        - "https"
      rule: "Host(`bookmarks.macapinlac.network`)"
      middlewares:
        - authelia
        - default-headers
        - https-redirectscheme
      tls: {}
      service: linkding
    photoprism:
      entryPoints:
        - "https"
      rule: "Host(`photos.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: photoprism
    monica:
      entryPoints:
        - "https"
      rule: "Host(`prm.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: monica
    overseerr:
      entryPoints:
        - "https"
      rule: "Host(`plx-request.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: overseerr
    homeassistant:
      entryPoints:
        - "https"
      rule: "Host(`ha.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: homeassistant
    nextcloud:
      entryPoints:
        - "https"
      rule: "Host(`nc.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: nextcloud
    paperless-ng:
      entryPoints:
        - "https"
      rule: "Host(`documents.macapinlac.network`)"
      middlewares:
        - authelia
        - default-headers
        - https-redirectscheme
      tls: {}
      service: paperless-ng
    fresh-rss:
      entryPoints:
        - "https"
      rule: "Host(`rss.macapinlac.network`)"
      middlewares:
        # - authelia
        - default-headers
        - https-redirectscheme
      tls: {}
      service: fresh-rss
    homepage:
      entryPoints:
        - "https"
      rule: "Host(`van.macapinlac.network`)"
      middlewares:
        - authelia
        - default-headers
        - https-redirectscheme
      tls: {}
      service: homepage
    tubearchivist:
      entryPoints:
        - "https"
      rule: "Host(`ta.macapinlac.network`)"
      middlewares:
        - authelia
        - default-headers
        - https-redirectscheme
      tls: {}
      service: tubearchivist

    radarr:
      entryPoints:
        - "https"
      rule: "Host(`radarr.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: radarr
    bazarr:
      entryPoints:
        - "https"
      rule: "Host(`bazarr.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: bazarr
    sonarr:
      entryPoints:
        - "https"
      rule: "Host(`sonarr.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: sonarr
    prowlarr:
      entryPoints:
        - "https"
      rule: "Host(`prowlarr.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: prowlarr
    sabnzbd:
      entryPoints:
        - "https"
      rule: "Host(`sabnzbd.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: sabnzbd
    transmission:
      entryPoints:
        - "https"
      rule: "Host(`transmission.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: transmission
    snippetbox:
      entryPoints:
        - "https"
      rule: "Host(`snippetbox.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: snippetbox
    tautulli:
      entryPoints:
        - "https"
      rule: "Host(`tautulli.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: tautulli
    homepage-int:
      entryPoints:
        - "https"
      rule: "Host(`homepage.van.macapinlac.network`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: homepage
#endregion

#region services
  services:
    bienn8n:
      loadbalancer:
        servers:
          - url: "http://arakita.int.macapinlac.network:5678"
        passhostheader: true
    biendb:
      loadbalancer:
        servers:
          - url: "http://arakita.int.macapinlac.network:8082"
        passhostheader: true
    tubearchivist:
      loadbalancer:
        servers:
          - url: "http://doubashi.int.macapinlac.network:8000"
        passhostheader: true
    audiobookshelf:
      loadbalancer:
        servers:
          - url: "http://manami.int.macapinlac.network:13378"
        passhostheader: true
    ubooquity:
      loadbalancer:
        servers:
          - url: "http://manami.int.macapinlac.network:2202"
        passhostheader: true
    radarr:
      loadbalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:7878"
        passhostheader: true
    bazarr:
      loadbalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:6767"
        passhostheader: true
    sonarr:
      loadbalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:8989"
        passhostheader: true
    prowlarr:
      loadbalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:9696"
        passhostheader: true
    linkding:
      loadbalancer:
        servers:
          - url: "http://mizuta.int.macapinlac.network:9090"
        passhostheader: true
    sabnzbd:
      loadBalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:8080"
        passHostHeader: true
    transmission:
      loadBalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:9091"
        passHostHeader: true
    snippetbox:
      loadBalancer:
        servers:
          - url: "http://mizuta.int.macapinlac.network:5000"
        passHostHeader: true
    photoprism:
      loadBalancer:
        servers:
          - url: "http://kishigami.int.macapinlac.network:2342"
        passHostHeader: true
    n8n:
      loadBalancer:
        servers:
          - url: "http://mizuta.int.macapinlac.network:5678"
        passHostHeader: true
    baserow:
      loadBalancer:
        servers:
          - url: "http://mizuta.int.macapinlac.network:8082"
        passHostHeader: true
    monica:
      loadBalancer:
        servers:
          - url: "http://mizuta.int.macapinlac.network:8083"
        passHostHeader: true
    plex:
      loadBalancer:
        servers:
          - url: "http://manami.int.macapinlac.network:32400"
        passHostHeader: true
    overseerr:
      loadBalancer:
        servers:
          - url: "http://shinkai.int.macapinlac.network:5055"
        passHostHeader: true
    homeassistant:
      loadBalancer:
        servers:
          - url: "http://toudou.int.macapinlac.network:8123"
        passHostHeader: true
    nextcloud:
      loadBalancer:
        servers:
          - url: "http://10.1.0.32:11000"
        passHostHeader: true
    paperless-ng:
      loadBalancer:
        servers:
          - url: "http://kishigami.int.macapinlac.network:8000"
        passHostHeader: true
    fresh-rss:
      loadBalancer:
        servers:
          - url: "http://kazuho.int.macapinlac.network:8082"
        passHostHeader: true
    homepage:
      loadBalancer:
        servers:
          - url: "http://kishigami.int.macapinlac.network:3000"
        passHostHeader: true
    tautulli:
      loadbalancer:
        servers:
          - url: "http://manami.int.macapinlac.network:8181"
        passhostheader: true
#endregion
#
  middlewares:
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    authelia:
      forwardAuth:
        address: 'http://authelia:9091/api/verify?rd=https://auth.macapinlac.network'
        trustForwardHeader: true
        authResponseHeaders: 'Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"
    redirectregex-pihole:
      redirectRegex:
        regex: /admin/$
        replacement: /

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "10.0.0.0/8"
        - "10.1.0.0/24"
        - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers

